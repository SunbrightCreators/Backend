# Generated by Django 5.2.4 on 2025-08-19 06:14

import django.core.validators
import django.db.models.deletion
import django_nanoid.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('proposals', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Funding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('summary', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.CharField(blank=True, max_length=1000, null=True)),
                ('business_hours', models.JSONField(default=dict, help_text='\n        {\n            "start": "09:00",\n            "end": "18:00",\n        }\n        ')),
                ('radius', models.PositiveSmallIntegerField(choices=[(0, '0m'), (250, '250m'), (500, '500m'), (750, '750m'), (1000, '1000m')])),
                ('image1', models.ImageField(upload_to='funding/image')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='funding/image')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='funding/image')),
                ('video', models.FileField(blank=True, null=True, upload_to='funding/video')),
                ('contact', models.CharField(max_length=50)),
                ('goal_amount', models.PositiveBigIntegerField()),
                ('schedule', models.JSONField(default=dict, help_text='\n        {\n            "start": "2025-07-21",\n            "end": "2025-08-24",\n        }\n        ')),
                ('schedule_description', models.CharField(max_length=1000)),
                ('expected_opening_date', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='YYYY-MM 형식으로 입력하세요.', regex='^\\d{4}-(0[1-9]|1[0-2])$')])),
                ('amount_description', models.CharField(max_length=1000)),
                ('founder_name', models.CharField(max_length=30)),
                ('founder_description', models.CharField(max_length=500)),
                ('founder_image', models.ImageField(upload_to='funding/founder_image')),
                ('bank_category', models.CharField(choices=[('NATURAL', '개인'), ('LEGAL', '법인')], max_length=10)),
                ('bank_account', models.CharField(max_length=16)),
                ('bank_bankbook', models.FileField(upload_to='funding/bank_bankbook')),
                ('policy', models.CharField(max_length=500)),
                ('expected_problem', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('PENDING', '심사 중'), ('APPROVED', '승인됨'), ('REJECTED', '반려됨'), ('IN_PROGRESS', '진행 중'), ('SUCCEEDED', '성공'), ('FAILED', '실패')], max_length=11)),
                ('reward_code', models.CharField(max_length=4)),
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='funding', to='proposals.proposal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funding', to='accounts.founder')),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('COUPON', '펀딩 할인쿠폰'), ('GIFT', '펀딩 선물증정'), ('LEVEL', '레벨')], max_length=6)),
                ('title', models.CharField(max_length=30)),
                ('content', models.CharField(max_length=50)),
                ('amount', models.PositiveSmallIntegerField(choices=[(5000, '5천원'), (10000, '1만원'), (30000, '3만원'), (50000, '5만원')])),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('funding', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reward', to='fundings.funding')),
            ],
        ),
        migrations.CreateModel(
            name='ProposerReward',
            fields=[
                ('id', django_nanoid.models.NANOIDField(alphabetically='abcdefghijklmnopqrstuvwxyz0123456789', prefix=None, primary_key=True, secure_generated=True, serialize=False, size=21)),
                ('status', models.CharField(choices=[('PENDING', '코드 없음'), ('UNUSED', '사용 가능함'), ('USED', '사용함')], max_length=7)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_reward', to='accounts.proposer')),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_reward', to='fundings.reward')),
            ],
        ),
        migrations.CreateModel(
            name='FounderScrapFunding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='founder_scrap_funding', to='accounts.founder')),
                ('funding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='founder_scrap_funding', to='fundings.funding')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user', 'funding'), name='unique_founder_scrap_funding')],
            },
        ),
        migrations.CreateModel(
            name='ProposerLikeFunding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('funding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_like_funding', to='fundings.funding')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_like_funding', to='accounts.proposer')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user', 'funding'), name='unique_proposer_like_funding')],
            },
        ),
        migrations.CreateModel(
            name='ProposerScrapFunding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('funding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_scrap_funding', to='fundings.funding')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_scrap_funding', to='accounts.proposer')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user', 'funding'), name='unique_proposer_scrap_funding')],
            },
        ),
    ]
