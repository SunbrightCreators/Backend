# Generated by Django 5.2.4 on 2025-08-19 06:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('content', models.CharField(max_length=1000)),
                ('industry', models.CharField(choices=[('FOOD_DINING', '외식/음식점'), ('CAFE_DESSERT', '카페/디저트'), ('PUB_BAR', '주점'), ('CONVENIENCE_RETAIL', '편의점/소매'), ('GROCERY_MART', '마트/식료품'), ('BEAUTY_CARE', '뷰티/미용'), ('HEALTH_FITNESS', '건강'), ('FASHION_GOODS', '패션/잡화'), ('HOME_LIVING_INTERIOR', '생활용품/가구/인테리어'), ('HOBBY_LEISURE', '취미/오락/여가'), ('CULTURE_BOOKS', '문화/서적'), ('PET', '반려동물'), ('LODGING', '숙박'), ('EDUCATION_ACADEMY', '교육/학원'), ('AUTO_TRANSPORT', '자동/운송'), ('IT_OFFICE', 'IT/사무'), ('FINANCE_LEGAL_TAX', '금융/법률/회계'), ('MEDICAL_PHARMA', '의료/의약'), ('PERSONAL_SERVICES', '생활 서비스'), ('FUNERAL_WEDDING', '장례/예식'), ('PHOTO_STUDIO', '사진/스튜디오'), ('OTHER_RETAIL', '기타 판매업'), ('OTHER_SERVICE', '기타 서비스업')], max_length=24)),
                ('business_hours', models.JSONField(default=dict, help_text='\n        {\n            "start": "09:00",\n            "end": "18:00",\n        }\n        ')),
                ('address', models.JSONField(default=dict, help_text='\n        {\n            "sido": "전라남도",\n            "sigungu": "광양시",\n            "eupmyundong": "광양읍",\n            "jibun_detail": "읍내리 252-1",\n            "road_detail": "매일시장길 20"\n        }\n        ')),
                ('position', models.JSONField(default=dict, help_text='\n        {\n            "latitude": 126.978388,\n            "longitude": 37.56661\n        }\n        ')),
                ('radius', models.PositiveSmallIntegerField(choices=[(0, '0m'), (250, '250m'), (500, '500m'), (750, '750m'), (1000, '1000m')])),
                ('image1', models.ImageField(blank=True, null=True, upload_to='proposal/image')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='proposal/image')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='proposal/image')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposal', to='accounts.proposer')),
            ],
        ),
        migrations.CreateModel(
            name='FounderScrapProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='founder_scrap_proposal', to='accounts.founder')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='founder_scrap_proposal', to='proposals.proposal')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user', 'proposal'), name='unique_founder_scrap_proposal', violation_error_message='창업자는 제안글을 한 번만 스크랩할 수 있어요.')],
            },
        ),
        migrations.CreateModel(
            name='ProposerLikeProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_like_proposal', to='proposals.proposal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_like_proposal', to='accounts.proposer')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user', 'proposal'), name='unique_proposer_like_proposal', violation_error_message='제안자는 제안글을 한 번만 좋아요할 수 있어요.')],
            },
        ),
        migrations.CreateModel(
            name='ProposerScrapProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_scrap_proposal', to='proposals.proposal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposer_scrap_proposal', to='accounts.proposer')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user', 'proposal'), name='unique_proposer_scrap_proposal', violation_error_message='제안자는 제안글을 한 번만 스크랩할 수 있어요.')],
            },
        ),
    ]
